# General application properties

# Logging
logging.level.org.example.driverandfleetmanagementapp=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.org.flywaydb=INFO

# API docs
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.operations-sorter=method
spring.jpa.open-in-view=false

# Cache
spring.cache.type=caffeine


# Actuator & Prometheus
management.endpoints.web.exposure.include=health,info,caches,prometheus,metrics
management.info.env.enabled=true

info.app.name=Driver and Fleet Management System
info.app.version=0.0.1-SNAPSHOT
info.app.description=Fleet management REST API
info.app.author=Maciej Adula
info.java.version=23
info.spring-boot.version=3.4.4
management.metrics.tags.application=fleet-management


#JWT
jwt.secret=${JWT_SECRET:myDefaultDevSecret123456789012345678901234567890}
jwt.expiration=${JWT_EXPIRATION:86400}



# Rate Limiting for expensive operations
resilience4j.ratelimiter.instances.admin-api.limit-for-period=100
resilience4j.ratelimiter.instances.admin-api.limit-refresh-period=PT1M
resilience4j.ratelimiter.instances.admin-api.timeout-duration=PT1S


# More restrictive rate limiting for auth method
resilience4j.ratelimiter.instances.auth-api.limit-for-period=10
resilience4j.ratelimiter.instances.auth-api.limit-refresh-period=PT1M
resilience4j.ratelimiter.instances.auth-api.timeout-duration=PT1S


# Rate Limiting get methods = less restrictive
resilience4j.ratelimiter.instances.api.limit-for-period=500
resilience4j.ratelimiter.instances.api.limit-refresh-period=PT1M
resilience4j.ratelimiter.instances.api.timeout-duration=PT0S


resilience4j.ratelimiter.metrics.enabled=true
actuator.security.enabled=true


